[{"/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/index.js":"1","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/reportWebVitals.js":"2","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/App.js":"3","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/reducer/Usereucer.js":"4","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/Authentication/Auth.js":"5","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/Landing/Landing.js":"6","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/discard/Discard.js":"7","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/editStudent/EditStudent.js":"8","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/StudentAdd/StudentAdd.js":"9","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/Authentication/AuthForm.js":"10","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/Authentication/AuthSection.js":"11","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/StudentAdd/StudentAddForm.js":"12","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/editStudent/EditForm.js":"13","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/Navigation/Nav.js":"14","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/Footer/Footer.js":"15","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/Navigation/StudentNav.js":"16","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/Addbutton/Addbutton.js":"17","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/StudentCard/StudentCard.js":"18","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/Navigation/Option.js":"19","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/Navigation/Menu.js":"20","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/StudentAdd/key.js":"21"},{"size":500,"mtime":1611245896657,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1611245896657,"results":"24","hashOfConfig":"23"},{"size":1840,"mtime":1611245896590,"results":"25","hashOfConfig":"23"},{"size":205,"mtime":1611245896657,"results":"26","hashOfConfig":"23"},{"size":326,"mtime":1611245896647,"results":"27","hashOfConfig":"23"},{"size":1817,"mtime":1611245896650,"results":"28","hashOfConfig":"23"},{"size":159,"mtime":1611245896653,"results":"29","hashOfConfig":"23"},{"size":335,"mtime":1611245896657,"results":"30","hashOfConfig":"23"},{"size":321,"mtime":1611245896650,"results":"31","hashOfConfig":"23"},{"size":2228,"mtime":1611245896650,"results":"32","hashOfConfig":"23"},{"size":1905,"mtime":1611245896650,"results":"33","hashOfConfig":"23"},{"size":24217,"mtime":1611248647266,"results":"34","hashOfConfig":"23"},{"size":28657,"mtime":1611249597680,"results":"35","hashOfConfig":"23"},{"size":311,"mtime":1611245896650,"results":"36","hashOfConfig":"23"},{"size":285,"mtime":1611245896650,"results":"37","hashOfConfig":"23"},{"size":462,"mtime":1611248031723,"results":"38","hashOfConfig":"23"},{"size":400,"mtime":1611245896647,"results":"39","hashOfConfig":"23"},{"size":1318,"mtime":1611245896653,"results":"40","hashOfConfig":"23"},{"size":664,"mtime":1611245896650,"results":"41","hashOfConfig":"23"},{"size":4873,"mtime":1611245896650,"results":"42","hashOfConfig":"23"},{"size":153,"mtime":1611246710307,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1cjb9me",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/index.js",[],["90","91"],"/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/reportWebVitals.js",[],"/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/App.js",["92","93"],"import React, { useContext, useReducer, useEffect, createContext } from \"react\";\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\nimport Auth from \"./Components/User/Authentication/Auth\";\nimport Landing from \"./Components/User/Landing/Landing\";\nimport Discard from './Components/User/discard/Discard';\nimport StudentAdd from './Components/User/StudentAdd/StudentAdd';\nimport \"./App.module.css\";\nimport { intialState, reducer } from \"./reducer/Usereucer\";\nimport classes from \"./App.module.css\";\nimport EditStudent from './Components/User/editStudent/EditStudent'\n\n\nexport const UserContext = createContext();\n\nconst Routing = () => {\n  // we use useContext for we want to acess state and dispatch\n  const { state, dispatch } = useContext(UserContext);\n  const history = useHistory();\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"mascStudetDb\"));\n    if (user) {\n      dispatch({ type: \"USER\", payload: user });\n      //  console.log(state);\n      history.push(\"/\");\n    } else {\n      history.push(\"/login\");\n    }\n  }, []);\n  return (\n    // switch is like a empty fragment more ablity\n    <Switch>\n      <Route exact path=\"/\">\n        <Landing />\n      </Route>\n\n      <Route path=\"/login\">\n        <Auth />\n      </Route>\n\n      <Route path=\"/discard\">\n        <Discard />\n      </Route>\n\n      <Route path=\"/addstudent\">\n        <StudentAdd />\n      </Route>\n\n      <Route  path=\"/editstudent/:id\">\n        <EditStudent />\n      </Route> \n    </Switch>\n  );\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, intialState);\n  return (\n    <div className={classes.App}>\n      <UserContext.Provider value={{ state, dispatch }}>\n        <BrowserRouter>\n          <Routing />\n        </BrowserRouter>\n      </UserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/reducer/Usereucer.js",[],"/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/Authentication/Auth.js",[],"/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/Landing/Landing.js",[],"/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/discard/Discard.js",[],"/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/editStudent/EditStudent.js",[],"/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/StudentAdd/StudentAdd.js",[],"/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/Authentication/AuthForm.js",[],"/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/Authentication/AuthSection.js",[],"/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/StudentAdd/StudentAddForm.js",["94","95","96","97","98","99"],"import React, { useRef, useState } from 'react'\nimport classes from './StudentAdd.module.css'\nimport { cloud } from './key'\nimport {useHistory} from 'react-router-dom'\nconst StudentAddForm = () => {\n   \n  let pic\n  const [bValue, setBValue] = useState('Submit');\n  const [admno, setAdmno] = useState('')\n\n\n\n  //form data\n  const [lName, setLname] = useState('');\n  const [fName, setFname] = useState('')\n  const [mob1, setMob1] = useState('');\n  const [mob2, setMob2] = useState('');\n  const [dob, setDob] = useState('')\n  const [sex, setSex] = useState('')\n  let bloodGroup;\n  let admissionSecured;\n  const [nameOfGuardian, setNameofGurdian] = useState('');\n  //address\n  const [homeName, setHomename] = useState('');\n  const [pincode, setPincode] = useState('');\n  const [post, setPost] = useState('');\n  const [city, setCity] = useState('');\n\n  const [relationGuardin, setRelationGuardin] = useState('');\n  const [occupationOfGuardian, setOccuptinofGurdian] = useState('');\n  const [ageOfGuardian, setAgeOfGuardian] = useState('')\n  let course\n  let sem\n  let batch\n  const [sslc, setSslc] = useState('');\n  const [email, setEmail] = useState('');\n  const [hss, setHss] = useState('');\n  const [etcActivity, setEtcActivity] = useState([])\n  let etc = []\n  let residence\n  const [religion, setReligion] = useState('');\n  const [cast, setCast] = useState('');\n  const [prevShool, setPrevshool] = useState('');\n\n  const [recommanted, setRecommanted] = useState('');\n  const [responsibleGuardianName, setResponsibleGuardianName] = useState('');\n  const [responsibleGuardianAge, setResponsibleGuardianAge] = useState('');\n  const [responsibleGuardianMob, setResponsibleGuardianMob] = useState('');\n  const [responsibleGuardianRelation, setResponsibleGuardianRelation] = useState('');\n  const [responsibleGuardianOccupation, setresponsibleGuardianOccupation] = useState('');\n  const [specialAchiev, setSpecialAchiev] = useState('');\n  const [maritalStatus, setMaritalStatus] = useState(Boolean);\n  const [specialProblem, setSpecialProblem] = useState('');\n  const [from, setFrom] = useState('')\n  const [to, setTo] = useState('')\n  const [prevCourse, setPrevCourse] = useState('')\n\n\n\n  const token = localStorage.getItem('mascStudetDb');\n\n  const postData = () => {\n    if (pic) {\n\n      console.log(bloodGroup);\n      console.log(admissionSecured);\n      fetch('student/newstudent', {\n        method: 'Post',\n        headers: {\n          'Content-Type': 'application/json',\n          \"authorization\": token.replace(/['\"]+/g, '')\n        },\n        body: JSON.stringify({\n          lName,\n          fName,\n          course,\n          sex,\n          sem,\n          mob1,\n          mob2,\n          bloodGroup,\n          dob,\n          nameOfGuardian,\n          occupationOfGuardian,\n          batch,\n          sslc,\n          pic,\n          homeName,\n          pincode,\n          post,\n          city,\n          relationGuardin,\n          religion,\n          prevShool,\n          residence,\n          recommanted,\n          responsibleGuardianName,\n          responsibleGuardianAge,\n          responsibleGuardianMob,\n          responsibleGuardianRelation,\n          ageOfGuardian,\n          hss,\n          etcActivity,\n          cast,\n          responsibleGuardianOccupation,\n          specialAchiev,\n          maritalStatus,\n          specialProblem,\n          prevCourse,\n          admissionSecured,\n          email,\n          admno\n        })\n      }).then(res => res.json()).then(responce => {\n        if (responce.error) {\n          alert(responce.error)\n          setBValue('Submit')\n        }\n        else {\n          console.log(responce);\n          alert('student added sucessfuly');\n          setBValue('Submit')\n          setFname('');\n          setLname('');\n          setImage({});\n          setHomename('');\n          setPost('');\n          pic = ''\n          setPincode('');\n          setCity('');\n          setEmail('');\n          setCity('');\n          setMob1('');\n          setMob2('');\n          setDob('')\n\n        }\n      }).catch(e => {\n        console.log(e);\n      })\n    } else {\n      alert('select a photo')\n    }\n  }\n  const postPic = () => {\n    setBValue('Uploading...')\n    //formdata object ||Currently its empty and more clarification go and read mozila doc you will understand much more about Formdata()\n    console.log('in upload', image.imageUrl);\n    const data = new FormData()\n\n    //append the image with key value pair image is above const image \n    data.append('file', image.imageUrl)\n\n    //put name of cloud upload/project name read cloudinary docs\n    data.append('upload_preset', cloud.uploadPreset);\n\n    //put name of cloud \n    data.append('cloud_name', cloud.cloudName)\n\n    //cloud base api insted fetch you can use axios like 3rd party libary\n    fetch(cloud.fetch, {\n      method: \"post\",\n      body: data\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      pic = data.secure_url;\n      if (pic) {\n        postData()\n      }\n\n\n    }).catch(e => {\n      console.log('error in upload', e)\n      alert('something went wrong plz connect internet')\n    })\n  }\n\n\n\n  const [image, setImage] = useState({\n    imageUrl: undefined,\n    errormsg: undefined,\n    errorFixInfo: undefined,\n  });\n  const ImageHandler = (e) => {\n    if (e.target.files[0]?.size) {\n      const fileSize = e.target.files[0].size;\n      if (fileSize > 100000) {\n        setImage({\n          errormsg: \"oops!! file too large\",\n          errorFixInfo: \"max image size 100kb\",\n        });\n      } else {\n\n        const reader = new FileReader();\n\n        reader.onload = () => {\n          if (reader.readyState === 2) {\n            console.log(reader);\n            const imageGet = reader.result;\n            setImage({ imageUrl: imageGet });\n          }\n        };\n        if (e.target.files[0]) {\n          reader.readAsDataURL(e.target.files[0]);\n        }\n      }\n    }\n  };\n  const profileclick = useRef();\n\n  const ProfileClickFun = () => {\n    profileclick.current.click();\n  }\n  return (\n\n    <div className={classes.StudentAddForm}>\n      <div className={classes.Form}>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault()\n\n            console.log('clicked', e.target);\n            bloodGroup = e.target[13][0].value\n            admissionSecured = e.target[37][0].value;\n            course = e.target[38][0].value\n            residence = e.target[14][0].value;\n            // sem = e.target[43][0].value;\n            batch = from + '/' + to\n            console.log('add', admissionSecured, 'res', residence, 'sem', sem, 'batch', batch, 'dobs',\n              dob, 'sex', sex, 'etc', etc);\n\n            if (!e.target[0].value) alert('select  photo')\n            else {\n              setBValue('Uploading...')\n              postPic()\n\n              //  postData()\n            }\n\n\n\n          }} className={classes.RealForm}>\n          <div onClick={ProfileClickFun} className={classes.ProfilePic}>\n            <img className={classes.Image} src={image.imageUrl} alt={null} />\n          </div>\n          <p className={classes.Errormsg}>\n            {image.errormsg}<br />\n            {image.errorFixInfo}\n          </p>\n          <input\n            className={classes.profilePictureAdd}\n            type=\"file\"\n            onChange={ImageHandler}\n            accept=\"image/*\"\n            ref={profileclick} />\n\n          <div className={classes.Fields}>\n            <p className={classes.MainHead}>Personal Info</p>\n            <label htmlFor=\"firstName\"\n              className={classes.InputField} >FirstName</label>\n            <input type=\"text\"\n              /* pattern=\"[A-Za-z]\" */\n              required\n              value={fName}\n              onChange={e => setFname(e.target.value)}\n            />\n\n            <label htmlFor=\"secondName\"\n              className={classes.InputField} >SecondName</label>\n            <input type=\"text\"\n              /* pattern=\"[A-Za-z]\" */\n              required\n\n              value={lName}\n              onChange={e => setLname(e.target.value)}\n            />\n\n            <label htmlFor=\"nameOfParent\"\n              className={classes.InputField} >ParentName</label>\n            <input type=\"text\"\n              /* pattern=\"[A-Za-z]\" */\n              required\n\n              value={nameOfGuardian}\n              onChange={e => setNameofGurdian(e.target.value)}\n            />\n\n            <label htmlFor=\"Homename\"\n              className={classes.InputField} >House Name</label>\n            <input type=\"text\"\n              /* pattern=\"[A-Za-z]\" */\n              required\n              value={homeName}\n              onChange={e => setHomename(e.target.value)}\n\n            />\n\n            <label htmlFor=\"Post\"\n              className={classes.InputField} >Post</label>\n            <input type=\"text\"\n              /* pattern=\"[A-Za-z]\" */\n              required\n              value={post}\n              onChange={e => setPost(e.target.value)}\n\n            />\n\n            <label htmlFor=\"City\"\n              className={classes.InputField} >City</label>\n            <input type=\"text\"\n              /*  pattern=\"[A-Za-z]\" */\n              required\n\n              value={city}\n              onChange={e => setCity(e.target.value)}\n            />\n\n            <label htmlFor=\"Pincode\"\n              className={classes.InputField} >Pin-Code</label>\n            <input type=\"number\"\n              /* pattern=\"[0-9]\"\n   */            required\n              value={pincode}\n              onChange={e => setPincode(e.target.value)}\n\n            />\n\n            <label htmlFor=\"mobilenumber\"\n              className={classes.InputField} >Mobile Number</label>\n            <input type=\"number\"\n              /* pattern=\"[0-9]\"\n   */            required\n              value={mob1}\n              onChange={e => setMob1(e.target.value)}\n            />\n\n            <label htmlFor=\"altmobileNumber\"\n              className={classes.InputField} >Mobile Number(Optional)</label>\n            <input type=\"number\"\n              /* pattern=\"[0-9]\"\n   */\n\n              value={mob2}\n              onChange={e => setMob2(e.target.value)}\n            />\n\n            <label htmlFor=\"dob\"\n              className={`${classes.InputField} ${classes.Dateofbirth}`} >DOB</label>\n\n            <input type=\"date\"\n              required\n\n              value={dob}\n              onChange={e => {\n\n                setDob(e.target.value)\n                console.log('dobs', dob);\n              }}\n            /> \n\n            \n            <p>Sex</p>\n            <div className={classes.sexField}>\n              <label  htmlFor=\"sexinputm\"\n                className={classes.InputField} >\n                <input\n                  id=\"sexinputm\"\n                  type=\"radio\"\n                  value=\"Male\"\n                  name=\"sex\"\n                  required\n\n                  onClick={(e) => {\n\n                    setSex(e.target.value)\n                    console.log('male', sex)\n                  }}\n                />\n        Male\n        </label>\n\n              <label htmlFor=\"sexinputf\"\n                className={classes.InputField}  >\n                <input\n                  id=\"sexinputf\"\n                  type=\"radio\"\n                  value=\"Female\"\n                  name=\"sex\"\n                  required\n\n                  onClick={(e) => {\n\n                    setSex(e.target.value)\n                    console.log('male', sex)\n                  }}\n                />\n        Female\n        </label>\n            </div>\n\n            <label htmlFor=\"bloodGroup\"\n              className={`${classes.InputField} ${classes.Dateofbirth}`} >Blood Group</label>\n            <select required >\n              <option value=\"A+ (Positive)\">A+ (Positive)</option>\n              <option value=\"A- (Negative)\">A- (Negative)</option>\n              <option value=\"B+ (Positive)\">B+ (Positive)</option>\n              <option value=\"B- (Negative)\">B- (Negative)</option>\n              <option value=\"O+ (Positive)\">O+ (Positive)</option>\n              <option value=\"O- (Negative)\">O- (Negative)</option>\n              <option value=\"AB+ (Positive)\">AB+ (Positive)</option>\n              <option value=\"AB- (Negative)\">AB- (Negative)</option>\n              <option value=\"Other\">Other</option>\n            </select>\n\n            <label htmlFor=\"residence\"\n              className={classes.InputField} >Residence</label>\n            <select required >\n              <option value=\"With Parent\">With Parent</option>\n              <option value=\"With Relatives\">With Relatives</option>\n              <option value=\"College Hostel\">College Hostel</option>\n              <option value=\"Lodge\">Lodge</option>\n              <option value=\"Other\">Other</option>\n            </select>\n\n            <label htmlFor=\"relationshipwithguardien\"\n              className={classes.InputField} >Relationship With Guardian</label>\n            <input type=\"text\"\n              /* pattern=\"[A-Za-z]\" */\n              value={relationGuardin}\n              onChange={e => {\n\n                setRelationGuardin(e.target.value)\n              }}\n\n              required />\n\n            <label htmlFor=\"Ocupationofguardien\"\n              className={classes.InputField} >Ocupation of Guardien</label>\n            <input type=\"text\"\n              /* pattern=\"[A-Za-z]\" */\n              required\n              value={occupationOfGuardian}\n              onChange={e => {\n\n                setOccuptinofGurdian(e.target.value)\n\n              }}\n\n            />\n\n            <label htmlFor=\"religion\"\n              className={classes.InputField} >Religion</label>\n            <input type=\"text\"\n              required\n\n              value={religion}\n              onChange={e => {\n\n                setReligion(e.target.value)\n\n              }}\n\n            />\n\n            <label htmlFor=\"cast\"\n              className={classes.InputField} >Cast</label>\n            <input type=\"text\"\n              required\n\n              value={cast}\n              onChange={e => {\n\n                setCast(e.target.value)\n\n              }}\n\n            />\n\n            <label htmlFor=\"mail\"\n              className={classes.InputField} >E-Mail</label>\n            <input type=\"mail\"\n\n              value={email}\n              onChange={e => {\n\n                setEmail(e.target.value)\n\n              }}\n            />\n\n            <p>Martial Status</p>\n            <div className={classes.martialstatus}>\n              <label htmlFor=\"martialt\"\n                className={classes.InputField} >\n                <input\n                  id=\"martialt\"\n                  type=\"radio\"\n                  value=\"True\"\n                  name=\"martial\"\n                  required\n\n                  onClick={() => setMaritalStatus(true)}\n                />\n        True\n        </label>\n\n              <label  htmlFor=\"martialf\"\n                className={classes.InputField} >\n                <input\n                  id=\"martialf\"\n                  type=\"radio\"\n                  value=\"False\"\n                  name=\"martial\"\n                  required\n\n                  onClick={() => {\n                    setMaritalStatus(false)\n                    console.log(maritalStatus);\n                  }}\n                />\n        False\n        </label>\n            </div>\n\n            <label htmlFor=\"specialproblem\"\n              className={classes.InputField} >Special Problem</label>\n            <input type=\"text\"\n\n              value={specialProblem}\n              onChange={e => {\n                setSpecialProblem(e.target.value)\n              }}\n            />\n\n            <p className={classes.MainHead}>Responsible Guardian Info</p>\n\n            <label htmlFor=\"name\"\n              className={classes.InputField} >Name</label>\n            <input type=\"text\"\n\n              value={responsibleGuardianName}\n              onChange={e => {\n                setResponsibleGuardianName(e.target.value)\n              }}\n\n              required\n            />\n\n            <label htmlFor=\"relationship\"\n              className={classes.InputField} >Relationship</label>\n            <input type=\"text\"\n              required\n              value={responsibleGuardianRelation}\n              onChange={e => {\n                setResponsibleGuardianRelation(e.target.value)\n              }}\n            />\n\n            <label htmlFor=\"age\"\n              className={classes.InputField} >Age</label>\n            <input type=\"number\"\n              value={responsibleGuardianAge}\n              onChange={e => {\n                setResponsibleGuardianAge(e.target.value)\n              }}\n              required\n            />\n\n            <label htmlFor=\"guardianmobno\"\n              className={classes.InputField} >Mobile Number</label>\n            <input type=\"number\"\n              required\n              value={responsibleGuardianMob}\n              onChange={e => {\n                setResponsibleGuardianMob(e.target.value)\n              }}\n            />\n\n            <label htmlFor=\"occupation\"\n              className={classes.InputField} >Occupation</label>\n            <input type=\"text\"\n            />\n\n            <p className={classes.MainHead}>Qualification Info</p>\n\n            <p>Extra Curricular Activities</p>\n            <div className={classes.extrac}>\n              <label htmlFor=\"extracA\"\n                className={classes.InputField} >\n                <input\n                  id=\"extracA\"\n                  type=\"checkbox\"\n                  value=\"Arts\"\n                  name=\"extrac\"\n                  onChange={e => {\n                    console.log(e.target.checked);\n                    e.target.checked ? etc.push(e.target.value) :\n                      etc = etc.filter(function (item) {\n                        return item !== e.target.value\n                      })\n\n                    console.log('etc', etc);\n                  }}\n\n                />\n        Arts\n        </label>\n\n              <label  htmlFor=\"extracS\"\n                className={classes.InputField} >\n                <input\n                  id=\"extracS\"\n                  type=\"checkbox\"\n                  value=\"Sports\"\n                  name=\"extrac\"\n                  onChange={e => {\n                    console.log(e.target.checked);\n                    e.target.checked ? etc.push(e.target.value) :\n                      etc = etc.filter(function (item) {\n                        return item !== e.target.value\n                      })\n                    console.log('etc', etc);\n\n                  }}\n                />\n        Sports\n        </label>\n\n              <label  htmlFor=\"extracN\"\n                className={classes.InputField} >\n                <input\n                  id=\"extracN\"\n                  type=\"checkbox\"\n                  value=\"NCC\"\n                  name=\"extrac\"\n                  onChange={e => {\n                    console.log(e.target.checked);\n                    e.target.checked ? etc.push(e.target.value) :\n                      etc = etc.filter(function (item) {\n                        return item !== e.target.value\n                      })\n                    console.log('etc', etc);\n\n                  }}\n                />\n        NCC\n        </label>\n\n              <label htmlFor=\"extracSS\"\n                className={classes.InputField} >\n                <input\n                  id=\"extracSS\"\n                  type=\"checkbox\"\n                  value=\"NSS\"\n                  name=\"extrac\"\n                  onChange={async e => {\n                    console.log(e.target.checked);\n                    e.target.checked ? etc.push(e.target.value) :\n                      etc = etc.filter(function (item) {\n                        return item !== e.target.value\n                      })\n\n                    console.log('etc', etc, 'a', etcActivity);\n                  }}\n                />\n        NSS\n        </label>\n            </div>\n\n            <label htmlFor=\"SpecialAchievments\"\n              className={classes.InputField} >Special Achievments</label>\n            <input type=\"text\"\n              value={specialAchiev}\n              onChange={e => setSpecialAchiev(e.target.value)}\n            />\n\n            <label  htmlFor=\"paper\"\n              className={classes.InputField} >SSLC/CBSE mark (%)\n      </label>\n            <input\n              type=\"number\"\n              required\n              value={sslc}\n              onChange={e => setSslc(e.target.value)}\n            />\n\n            <label  htmlFor=\"sslcmark\"\n              className={classes.InputField} >HSE Paper (,)\n      </label>\n            <input\n              type=\"text\"\n              value={prevCourse}\n              onChange={e => setPrevCourse(e.target.value)}\n              required\n            />\n\n            <label htmlFor=\"hsemark\"\n              className={classes.InputField} >HSE/CBSE mark (%)\n      </label>\n            <input\n              type=\"number\"\n              required\n              value={hss}\n              onChange={e => setHss(e.target.value)}\n            />\n\n\n            <label htmlFor=\"institution\"\n              className={classes.InputField} >Institution last attended\n      </label>\n            <input\n              type=\"text\"\n              value={prevShool}\n              onChange={e => setPrevshool(e.target.value)}\n              required\n            />\n\n            <p className={classes.MainHead}>Admission Info</p>\n\n            <label htmlFor=\"admissionsecured\"\n              className={classes.InputField}>admission secured</label>\n            <select required >\n              <option value=\"Management\">Management</option>\n              <option value=\"Merit\">Merit</option>\n              <option value=\"Muslim\">Muslim</option>\n              <option value=\"SC/ST\">SC/ST</option>\n              <option value=\"OBC/OEC\">OBC/OEC</option>\n              <option value=\"Other\">Other</option>\n            </select>\n\n            <label htmlFor=\"Course\"\n              className={classes.InputField}>Course</label>\n            <select required >\n              <option value=\"BSC computer science\">BSC computer science</option>\n              <option value=\"BSC Physics\">BSC Physics</option>\n              <option value=\"BSC Microbiology\">BSC Microbiology</option>\n              <option value=\"BSC Maths\">BSC Maths</option>\n              <option value=\"BSC Chemistry\">BSC Chemistry</option>\n              <option value=\"BCA\">BCA</option>\n              <option value=\"BBA\">BBA</option>\n              <option value=\"BCOM TT\">BCOM TT</option>\n              <option value=\"BCOM TT\">BCOM CA</option>\n              <option value=\"BCOM Finance)\">BCOM Finance</option>\n              <option value=\"BCOM Islamic Finance\">BCOM Islamic Finance</option>\n              <option value=\"BA Multimedia\">BA Multimedia</option>\n              <option value=\"BA Mass Communication\">BA Mass Communication</option>\n              <option value=\"BA English\">BA English</option>\n              <option value=\"BA Arabic\">BA Arabic</option>\n              <option value=\"BA Hindi\">BA Hindi</option>\n              <option value=\"BA Malayalam\">BA Malayalam</option>\n            </select>\n\n            <label  htmlFor=\"admno\"\n              className={classes.InputField} >Admission Number\n      </label>\n            <input\n              type=\"number\"\n              required\n              value={admno}\n              onChange={e => setAdmno(e.target.value)}\n            />\n\n            <label  htmlFor=\"batch\"\n              className={classes.InputField} >Batch From\n      </label>\n            <input\n              type=\"number\"\n              required\n              value={from}\n              onChange={e => setFrom(e.target.value)}\n            />\n\n            <label  htmlFor=\"batch\"\n              className={classes.InputField} >Batch To\n      </label>\n            <input\n              type=\"number\"\n              required\n              value={to}\n              onChange={e => setTo(e.target.value)}\n            />\n\n          </div>\n          <input type=\"submit\" value={bValue}\n            disabled={bValue === 'Uploading...' ? true : false}\n            className={classes.Submit} />\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default StudentAddForm\n\n","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/editStudent/EditForm.js",["100","101","102","103","104","105","106"],"/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/Navigation/Nav.js",[],"/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/Footer/Footer.js",["107"],"import React from 'react'\nimport iedcLogo from '../../../Asset/iedc logo.png'\nimport classes from './Footer.module.css'\n\nconst Footer = () => {\n    return(\n        <div className={classes.Footer}>\n            <p>Official MASC © 2021</p>\n        </div>\n    )\n}\n\nexport default Footer\n\n","/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/Navigation/StudentNav.js",[],"/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/Addbutton/Addbutton.js",[],"/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/StudentCard/StudentCard.js",[],"/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/Navigation/Option.js",[],"/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/Navigation/Menu.js",[],"/home/nizamkolathoden/masc_students_entery/masc/masc-sdb-1.0/src/Components/User/StudentAdd/key.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":17,"column":11,"nodeType":"114","messageId":"115","endLine":17,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":28,"column":6,"nodeType":"118","endLine":28,"endColumn":8,"suggestions":"119"},{"ruleId":"112","severity":1,"message":"120","line":4,"column":9,"nodeType":"114","messageId":"115","endLine":4,"endColumn":19},{"ruleId":"112","severity":1,"message":"121","line":31,"column":25,"nodeType":"114","messageId":"115","endLine":31,"endColumn":41},{"ruleId":"112","severity":1,"message":"122","line":38,"column":23,"nodeType":"114","messageId":"115","endLine":38,"endColumn":37},{"ruleId":"112","severity":1,"message":"123","line":45,"column":23,"nodeType":"114","messageId":"115","endLine":45,"endColumn":37},{"ruleId":"112","severity":1,"message":"124","line":50,"column":41,"nodeType":"114","messageId":"115","endLine":50,"endColumn":73},{"ruleId":"125","severity":1,"message":"126","line":245,"column":13,"nodeType":"127","endLine":245,"endColumn":78},{"ruleId":"112","severity":1,"message":"121","line":35,"column":25,"nodeType":"114","messageId":"115","endLine":35,"endColumn":41},{"ruleId":"112","severity":1,"message":"122","line":42,"column":23,"nodeType":"114","messageId":"115","endLine":42,"endColumn":37},{"ruleId":"112","severity":1,"message":"128","line":58,"column":10,"nodeType":"114","messageId":"115","endLine":58,"endColumn":14},{"ruleId":"112","severity":1,"message":"129","line":59,"column":10,"nodeType":"114","messageId":"115","endLine":59,"endColumn":12},{"ruleId":"116","severity":1,"message":"130","line":232,"column":6,"nodeType":"118","endLine":232,"endColumn":8,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":280,"column":13,"nodeType":"134","messageId":"135","endLine":285,"endColumn":14},{"ruleId":"125","severity":1,"message":"126","line":314,"column":13,"nodeType":"127","endLine":314,"endColumn":78},{"ruleId":"112","severity":1,"message":"136","line":2,"column":8,"nodeType":"114","messageId":"115","endLine":2,"endColumn":16},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["139"],"'useHistory' is defined but never used.","'setAgeOfGuardian' is assigned a value but never used.","'setEtcActivity' is assigned a value but never used.","'setRecommanted' is assigned a value but never used.","'setresponsibleGuardianOccupation' is assigned a value but never used.","jsx-a11y/alt-text","Invalid alt value for img. Use alt=\"\" for presentational images.","JSXOpeningElement","'from' is assigned a value but never used.","'to' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'batch', 'blood', 'id', and 'token'. Either include them or remove the dependency array.",["140"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'iedcLogo' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [dispatch, history]",{"range":"145","text":"146"},"Update the dependencies array to be: [batch, blood, id, token]",{"range":"147","text":"148"},[1073,1075],"[dispatch, history]",[7183,7185],"[batch, blood, id, token]"]